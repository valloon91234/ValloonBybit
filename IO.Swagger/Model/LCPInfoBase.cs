/* 
 * Bybit API
 *
 * ## REST API for the Bybit Exchange. Base URI: [https://api.bybit.com]  
 *
 * OpenAPI spec version: 0.2.10
 * Contact: support@bybit.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Query LCP info.
    /// </summary>
    [DataContract]
    public partial class LCPInfoBase :  IEquatable<LCPInfoBase>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LCPInfoBase" /> class.
        /// </summary>
        /// <param name="date">date.</param>
        /// <param name="selfRatio">selfRatio.</param>
        /// <param name="platformRatio">platformRatio.</param>
        /// <param name="score">score.</param>
        public LCPInfoBase(string date = default(string), decimal? selfRatio = default(decimal?), decimal? platformRatio = default(decimal?), decimal? score = default(decimal?))
        {
            this.Date = date;
            this.SelfRatio = selfRatio;
            this.PlatformRatio = platformRatio;
            this.Score = score;
        }
        
        /// <summary>
        /// Gets or Sets Date
        /// </summary>
        [DataMember(Name="date", EmitDefaultValue=false)]
        public string Date { get; set; }

        /// <summary>
        /// Gets or Sets SelfRatio
        /// </summary>
        [DataMember(Name="self_ratio", EmitDefaultValue=false)]
        public decimal? SelfRatio { get; set; }

        /// <summary>
        /// Gets or Sets PlatformRatio
        /// </summary>
        [DataMember(Name="platform_ratio", EmitDefaultValue=false)]
        public decimal? PlatformRatio { get; set; }

        /// <summary>
        /// Gets or Sets Score
        /// </summary>
        [DataMember(Name="score", EmitDefaultValue=false)]
        public decimal? Score { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LCPInfoBase {\n");
            sb.Append("  Date: ").Append(Date).Append("\n");
            sb.Append("  SelfRatio: ").Append(SelfRatio).Append("\n");
            sb.Append("  PlatformRatio: ").Append(PlatformRatio).Append("\n");
            sb.Append("  Score: ").Append(Score).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LCPInfoBase);
        }

        /// <summary>
        /// Returns true if LCPInfoBase instances are equal
        /// </summary>
        /// <param name="input">Instance of LCPInfoBase to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LCPInfoBase input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Date == input.Date ||
                    (this.Date != null &&
                    this.Date.Equals(input.Date))
                ) && 
                (
                    this.SelfRatio == input.SelfRatio ||
                    (this.SelfRatio != null &&
                    this.SelfRatio.Equals(input.SelfRatio))
                ) && 
                (
                    this.PlatformRatio == input.PlatformRatio ||
                    (this.PlatformRatio != null &&
                    this.PlatformRatio.Equals(input.PlatformRatio))
                ) && 
                (
                    this.Score == input.Score ||
                    (this.Score != null &&
                    this.Score.Equals(input.Score))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Date != null)
                    hashCode = hashCode * 59 + this.Date.GetHashCode();
                if (this.SelfRatio != null)
                    hashCode = hashCode * 59 + this.SelfRatio.GetHashCode();
                if (this.PlatformRatio != null)
                    hashCode = hashCode * 59 + this.PlatformRatio.GetHashCode();
                if (this.Score != null)
                    hashCode = hashCode * 59 + this.Score.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
